package tests.Defect;


import com.relevantcodes.extentreports.LogStatus;
import org.apache.log4j.Logger;
import org.testng.annotations.Test;
import pages.Defect.DefectPage;
import pages.Defect.EditDefectPage;
import pages.Defect.MoreDefectPage;
import pages.HomePage;
import utils.PageBase;
import utils.TestBase;
public class EditDefect extends TestBase {
    private static final Logger LOGGER = Logger.getLogger(AddDefect.class);

    @Test(priority=20,groups = { "regression","test"})
    public void checkEditButton() {
        PageBase.implicitWait(5);
        //softAssert.assertTrue(HomePage.isHomePageDisplayed(),"Home Page is not Displayed");
        LOGGER.info("Home Page is Displayed");
        extentTest.log(LogStatus.PASS, "Home page is displayed ");
        staticWait(2);
        softAssert.assertEquals(HomePage.isDefectMenuDisplayed(),"Defect","defect menu not available");
        LOGGER.info("Defect menu is displayed");
        extentTest.log(LogStatus.PASS, "Defect menu is displayed");
        HomePage.clickDefectMenu();
        LOGGER.info("Click Defect menu");
        extentTest.log(LogStatus.PASS, "click defect menu");
        staticWait(2);
        softAssert.assertEquals(HomePage.isDefectSubMenuDisplayed(),"Defect","defect sub  menu not available");
        LOGGER.info("Defect sub menu is displayed");
        extentTest.log(LogStatus.PASS, "Defect sub menu is displayed");
        HomePage.clickDefectSubMenu();
        LOGGER.info("Click Defect sub menu");
        extentTest.log(LogStatus.PASS, "click defect sub menu");
        softAssert.assertTrue(DefectPage.isDefectPageTitleDisplayed(),"Defect Page is not Displayed");
        LOGGER.info("Defect Page is  Displayed");
        extentTest.log(LogStatus.PASS, "Defect Page is  Displayed");
        DefectPage.clickEditButton("DEF001");
        LOGGER.info("click edit button");
        extentTest.log(LogStatus.PASS, "click edit button");
        staticWait(3);
        softAssert.assertTrue(EditDefectPage.isEditDefectFormDisplayed(),"Edit Defect Form is not Displayed");
        LOGGER.info("edit defect form is displayed");
        extentTest.log(LogStatus.PASS, "edit defect form is displayed");
        softAssert.assertAll();
    }
    @Test(priority=21,groups = { "regression","smoke","test"})
    public void editModule() {
        PageBase.implicitWait(5);
        //softAssert.assertTrue(HomePage.isHomePageDisplayed(),"Home Page is not Displayed");
        LOGGER.info("Home Page is Displayed");
        extentTest.log(LogStatus.PASS, "Home page is displayed ");
        staticWait(2);
        softAssert.assertEquals(HomePage.isDefectMenuDisplayed(),"Defect","defect menu not available");
        LOGGER.info("Defect menu is displayed");
        extentTest.log(LogStatus.PASS, "Defect menu is displayed");
        HomePage.clickDefectMenu();
        LOGGER.info("Click Defect menu");
        extentTest.log(LogStatus.PASS, "click defect menu");
        staticWait(2);
        softAssert.assertEquals(HomePage.isDefectSubMenuDisplayed(),"Defect","defect sub  menu not available");
        LOGGER.info("Defect sub menu is displayed");
        extentTest.log(LogStatus.PASS, "Defect sub menu is displayed");
        HomePage.clickDefectSubMenu();
        LOGGER.info("Click Defect sub menu");
        extentTest.log(LogStatus.PASS, "click defect sub menu");
        softAssert.assertTrue(DefectPage.isDefectPageTitleDisplayed(),"Defect Page is not Displayed");
        LOGGER.info("Defect Page is  Displayed");
        extentTest.log(LogStatus.PASS, "Defect Page is  Displayed");
        DefectPage.clickEditButton("jp1234");
        LOGGER.info("click edit button");
        extentTest.log(LogStatus.PASS, "click edit button");
        staticWait(3);
        softAssert.assertTrue(EditDefectPage.isEditDefectFormDisplayed(),"Edit Defect Form is not Displayed");
        LOGGER.info("edit defect form is displayed");
        extentTest.log(LogStatus.PASS, "edit defect form is displayed");
        EditDefectPage.editModule("jp");
        LOGGER.info("edit module ");
        extentTest.log(LogStatus.PASS, "edit module");
        EditDefectPage.clickOKButton();
        LOGGER.info("click ok button");
        extentTest.log(LogStatus.PASS, "click ok button");
        softAssert.assertEquals(DefectPage.verifyEditStatus("jp1234","2"),"jp","module not match");
        LOGGER.info("Module edited successfully");
        extentTest.log(LogStatus.PASS, "Module edited successfully");
        softAssert.assertAll();
    }
    @Test(priority=22,groups = { "regression","test"})
    public void editSeverity() {
        PageBase.implicitWait(5);
        //softAssert.assertTrue(HomePage.isHomePageDisplayed(),"Home Page is not Displayed");
        LOGGER.info("Home Page is Displayed");
        extentTest.log(LogStatus.PASS, "Home page is displayed ");
        staticWait(2);
        softAssert.assertEquals(HomePage.isDefectMenuDisplayed(),"Defect","defect menu not available");
        LOGGER.info("Defect menu is displayed");
        extentTest.log(LogStatus.PASS, "Defect menu is displayed");
        HomePage.clickDefectMenu();
        LOGGER.info("Click Defect menu");
        extentTest.log(LogStatus.PASS, "click defect menu");
        staticWait(2);
        softAssert.assertEquals(HomePage.isDefectSubMenuDisplayed(),"Defect","defect sub  menu not available");
        LOGGER.info("Defect sub menu is displayed");
        extentTest.log(LogStatus.PASS, "Defect sub menu is displayed");
        HomePage.clickDefectSubMenu();
        LOGGER.info("Click Defect sub menu");
        extentTest.log(LogStatus.PASS, "click defect sub menu");
        softAssert.assertTrue(DefectPage.isDefectPageTitleDisplayed(),"Defect Page is not Displayed");
        LOGGER.info("Defect Page is  Displayed");
        extentTest.log(LogStatus.PASS, "Defect Page is  Displayed");
        DefectPage.clickEditButton("jp1234");
        LOGGER.info("click edit button");
        extentTest.log(LogStatus.PASS, "click edit button");
        staticWait(3);
        softAssert.assertTrue(EditDefectPage.isEditDefectFormDisplayed(),"Edit Defect Form is not Displayed");
        LOGGER.info("edit defect form is displayed");
        extentTest.log(LogStatus.PASS, "edit defect form is displayed");
        EditDefectPage.editSeverity("Low");
        EditDefectPage.clickOKButton();
        LOGGER.info("click ok button");
        extentTest.log(LogStatus.PASS, "click ok button");
        staticWait(2);
        softAssert.assertEquals(DefectPage.verifyEditStatus("jp1234","3"),"Low","severity type not match");
        LOGGER.info("severity type edited successfully");
        extentTest.log(LogStatus.PASS, "severity type edited successfully");
        softAssert.assertAll();
    }
    @Test(priority=23,groups = { "regression","test"})
    public void editPriority() {
        PageBase.implicitWait(5);
        //softAssert.assertTrue(HomePage.isHomePageDisplayed(),"Home Page is not Displayed");
        LOGGER.info("Home Page is Displayed");
        extentTest.log(LogStatus.PASS, "Home page is displayed ");
        staticWait(2);
        softAssert.assertEquals(HomePage.isDefectMenuDisplayed(),"Defect","defect menu not available");
        LOGGER.info("Defect menu is displayed");
        extentTest.log(LogStatus.PASS, "Defect menu is displayed");
        HomePage.clickDefectMenu();
        LOGGER.info("Click Defect menu");
        extentTest.log(LogStatus.PASS, "click defect menu");
        staticWait(2);
        softAssert.assertEquals(HomePage.isDefectSubMenuDisplayed(),"Defect","defect sub  menu not available");
        LOGGER.info("Defect sub menu is displayed");
        extentTest.log(LogStatus.PASS, "Defect sub menu is displayed");
        HomePage.clickDefectSubMenu();
        LOGGER.info("Click Defect sub menu");
        extentTest.log(LogStatus.PASS, "click defect sub menu");
        softAssert.assertTrue(DefectPage.isDefectPageTitleDisplayed(),"Defect Page is not Displayed");
        LOGGER.info("Defect Page is  Displayed");
        extentTest.log(LogStatus.PASS, "Defect Page is  Displayed");
        DefectPage.clickEditButton("DEF001");
        LOGGER.info("click edit button");
        extentTest.log(LogStatus.PASS, "click edit button");
        staticWait(3);
        softAssert.assertTrue(EditDefectPage.isEditDefectFormDisplayed(),"Edit Defect Form is not Displayed");
        LOGGER.info("edit defect form is displayed");
        extentTest.log(LogStatus.PASS, "edit defect form is displayed");
        EditDefectPage.editPriority("Low");
        EditDefectPage.clickOKButton();
        LOGGER.info("click ok button");
        extentTest.log(LogStatus.PASS, "click ok button");
        softAssert.assertEquals(DefectPage.verifyEditStatus("DEF001","4"),"Low","priority type not match");
        LOGGER.info("priority type edited successfully");
        extentTest.log(LogStatus.PASS, "priority type edited successfully");
        softAssert.assertAll();
    }
    @Test(priority=24,groups = { "regression","smoke","test"})
    public void editStatus() {
        PageBase.implicitWait(5);
        //softAssert.assertTrue(HomePage.isHomePageDisplayed(),"Home Page is not Displayed");
        LOGGER.info("Home Page is Displayed");
        extentTest.log(LogStatus.PASS, "Home page is displayed ");
        staticWait(2);
        softAssert.assertEquals(HomePage.isDefectMenuDisplayed(),"Defect","defect menu not available");
        LOGGER.info("Defect menu is displayed");
        extentTest.log(LogStatus.PASS, "Defect menu is displayed");
        HomePage.clickDefectMenu();
        LOGGER.info("Click Defect menu");
        extentTest.log(LogStatus.PASS, "click defect menu");
        staticWait(2);
        softAssert.assertEquals(HomePage.isDefectSubMenuDisplayed(),"Defect","defect sub  menu not available");
        LOGGER.info("Defect sub menu is displayed");
        extentTest.log(LogStatus.PASS, "Defect sub menu is displayed");
        HomePage.clickDefectSubMenu();
        LOGGER.info("Click Defect sub menu");
        extentTest.log(LogStatus.PASS, "click defect sub menu");
        softAssert.assertTrue(DefectPage.isDefectPageTitleDisplayed(),"Defect Page is not Displayed");
        LOGGER.info("Defect Page is  Displayed");
        extentTest.log(LogStatus.PASS, "Defect Page is  Displayed");
        DefectPage.clickEditButton("DEF001");
        LOGGER.info("click edit button");
        extentTest.log(LogStatus.PASS, "click edit button");
        staticWait(3);
        softAssert.assertTrue(EditDefectPage.isEditDefectFormDisplayed(),"Edit Defect Form is not Displayed");
        LOGGER.info("edit defect form is displayed");
        extentTest.log(LogStatus.PASS, "edit defect form is displayed");
        EditDefectPage.editStatus("Open");
        EditDefectPage.clickOKButton();
        LOGGER.info("click ok button");
        extentTest.log(LogStatus.PASS, "click ok button");
        softAssert.assertEquals(DefectPage.verifyEditStatus("DEF001","5"),"Open","Defect status not match");
        LOGGER.info("Defect status edited successfully");
        extentTest.log(LogStatus.PASS, "Defect status edited successfully");
        softAssert.assertAll();
    }
    @Test(priority=25,groups = { "regression","smoke","test"})
    public void editAssignee() {
        PageBase.implicitWait(5);
        //softAssert.assertTrue(HomePage.isHomePageDisplayed(),"Home Page is not Displayed");
        LOGGER.info("Home Page is Displayed");
        extentTest.log(LogStatus.PASS, "Home page is displayed ");
        staticWait(2);
        softAssert.assertEquals(HomePage.isDefectMenuDisplayed(),"Defect","defect menu not available");
        LOGGER.info("Defect menu is displayed");
        extentTest.log(LogStatus.PASS, "Defect menu is displayed");
        HomePage.clickDefectMenu();
        LOGGER.info("Click Defect menu");
        extentTest.log(LogStatus.PASS, "click defect menu");
        staticWait(2);
        softAssert.assertEquals(HomePage.isDefectSubMenuDisplayed(),"Defect","defect sub  menu not available");
        LOGGER.info("Defect sub menu is displayed");
        extentTest.log(LogStatus.PASS, "Defect sub menu is displayed");
        HomePage.clickDefectSubMenu();
        LOGGER.info("Click Defect sub menu");
        extentTest.log(LogStatus.PASS, "click defect sub menu");
        softAssert.assertTrue(DefectPage.isDefectPageTitleDisplayed(),"Defect Page is not Displayed");
        LOGGER.info("Defect Page is  Displayed");
        extentTest.log(LogStatus.PASS, "Defect Page is  Displayed");
        DefectPage.clickEditButton("DEF001");
        LOGGER.info("click edit button");
        extentTest.log(LogStatus.PASS, "click edit button");
        staticWait(3);
        softAssert.assertTrue(EditDefectPage.isEditDefectFormDisplayed(),"Edit Defect Form is not Displayed");
        LOGGER.info("edit defect form is displayed");
        extentTest.log(LogStatus.PASS, "edit defect form is displayed");
        EditDefectPage.editAssignTo("jp");
        EditDefectPage.clickOKButton();
        LOGGER.info("click ok button");
        extentTest.log(LogStatus.PASS, "click ok button");
        softAssert.assertEquals(DefectPage.verifyEditStatus("DEF001","6"),"jp","AssignTo not match");
        LOGGER.info("AssignTo edited successfully");
        extentTest.log(LogStatus.PASS, "AssignTo  edited successfully");
        softAssert.assertAll();
    }
//    @Test(priority=26,groups = { "regression","test"})
//    public void editFoundIn() {
//        implicitWait(5);
//        //softAssert.assertTrue(HomePage.isHomePageDisplayed(),"Home Page is not Displayed");
//        LOGGER.info("Home Page is Displayed");
//        extentTest.log(LogStatus.PASS, "Home page is displayed ");
//        staticWait(2);
//        HomePage.clickDefectMenu();
//        LOGGER.info("click defect menu");
//        extentTest.log(LogStatus.PASS, "click defect menu");
//        staticWait(2);
//        HomePage.clickDefectSubMenu();
//        LOGGER.info("click defect sub menu");
//        extentTest.log(LogStatus.PASS, "click defect sub menu");
//        softAssert.assertTrue(DefectPage.isDefectPageTitleDisplayed(),"Defect Page is not Displayed");
//        LOGGER.info("Defect Page is  Displayed");
//        extentTest.log(LogStatus.PASS, "Defect Page is  Displayed");
//        DefectPage.clickEditButton("DEF001");
//        LOGGER.info("click edit button");
//        extentTest.log(LogStatus.PASS, "click edit button");
//        staticWait(3);
//        softAssert.assertTrue(EditDefectPage.isEditDefectFormDisplayed(),"Edit Defect Form is not Displayed");
//        LOGGER.info("edit defect form is displayed");
//        extentTest.log(LogStatus.PASS, "edit defect form is displayed");
//        EditDefectPage.editFoundIn("Release3");
//        EditDefectPage.clickOKButton();
//        LOGGER.info("click ok button");
//        extentTest.log(LogStatus.PASS, "click ok button");
//        LOGGER.info("editFoundIn edited successfully");
//        extentTest.log(LogStatus.PASS, "editFoundIn type edited successfully");
//        softAssert.assertAll();
//    }
    @Test(priority=27,groups = { "regression","test"})
    public void editDescription() {
        PageBase.implicitWait(5);
        //softAssert.assertTrue(HomePage.isHomePageDisplayed(),"Home Page is not Displayed");
        LOGGER.info("Home Page is Displayed");
        extentTest.log(LogStatus.PASS, "Home page is displayed ");
        staticWait(2);
        softAssert.assertEquals(HomePage.isDefectMenuDisplayed(),"Defect","defect menu not available");
        LOGGER.info("Defect menu is displayed");
        extentTest.log(LogStatus.PASS, "Defect menu is displayed");
        HomePage.clickDefectMenu();
        LOGGER.info("Click Defect menu");
        extentTest.log(LogStatus.PASS, "click defect menu");
        staticWait(2);
        softAssert.assertEquals(HomePage.isDefectSubMenuDisplayed(),"Defect","defect sub  menu not available");
        LOGGER.info("Defect sub menu is displayed");
        extentTest.log(LogStatus.PASS, "Defect sub menu is displayed");
        HomePage.clickDefectSubMenu();
        LOGGER.info("Click Defect sub menu");
        extentTest.log(LogStatus.PASS, "click defect sub menu");
        softAssert.assertTrue(DefectPage.isDefectPageTitleDisplayed(),"Defect Page is not Displayed");
        LOGGER.info("Defect Page is  Displayed");
        extentTest.log(LogStatus.PASS, "Defect Page is  Displayed");
        DefectPage.clickEditButton("DEF001");
        LOGGER.info("click edit button");
        extentTest.log(LogStatus.PASS, "click edit button");
        staticWait(3);
        softAssert.assertTrue(EditDefectPage.isEditDefectFormDisplayed(),"Edit Defect Form is not Displayed");
        LOGGER.info("edit defect form is displayed");
        extentTest.log(LogStatus.PASS, "edit defect form is displayed");
        EditDefectPage.editDescription("testing for edit description");
        EditDefectPage.clickOKButton();
        LOGGER.info("click ok button");
        extentTest.log(LogStatus.PASS, "click ok button");
        staticWait(1);
        DefectPage.clickMoreDefectDetailsButton("DEF001");
        softAssert.assertEquals(MoreDefectPage.getDescription(),"testing for edit description","description not match");
        LOGGER.info("description edited successfully");
        extentTest.log(LogStatus.PASS, "description edited successfully");
        softAssert.assertAll();
    }
    @Test(priority=28,groups = { "regression","test"})
    public void editSteps() {
        PageBase.implicitWait(5);
        //softAssert.assertTrue(HomePage.isHomePageDisplayed(),"Home Page is not Displayed");
        LOGGER.info("Home Page is Displayed");
        extentTest.log(LogStatus.PASS, "Home page is displayed ");
        staticWait(2);
        softAssert.assertEquals(HomePage.isDefectMenuDisplayed(),"Defect","defect menu not available");
        LOGGER.info("Defect menu is displayed");
        extentTest.log(LogStatus.PASS, "Defect menu is displayed");
        HomePage.clickDefectMenu();
        LOGGER.info("Click Defect menu");
        extentTest.log(LogStatus.PASS, "click defect menu");
        staticWait(2);
        softAssert.assertEquals(HomePage.isDefectSubMenuDisplayed(),"Defect","defect sub  menu not available");
        LOGGER.info("Defect sub menu is displayed");
        extentTest.log(LogStatus.PASS, "Defect sub menu is displayed");
        HomePage.clickDefectSubMenu();
        LOGGER.info("Click Defect sub menu");
        extentTest.log(LogStatus.PASS, "click defect sub menu");
        softAssert.assertTrue(DefectPage.isDefectPageTitleDisplayed(),"Defect Page is not Displayed");
        LOGGER.info("Defect Page is  Displayed");
        extentTest.log(LogStatus.PASS, "Defect Page is  Displayed");
        DefectPage.clickEditButton("DEF001");
        LOGGER.info("click edit button");
        extentTest.log(LogStatus.PASS, "click edit button");
        staticWait(3);
        softAssert.assertTrue(EditDefectPage.isEditDefectFormDisplayed(),"Edit Defect Form is not Displayed");
        LOGGER.info("edit defect form is displayed");
        extentTest.log(LogStatus.PASS, "edit defect form is displayed");
        EditDefectPage.editSteps("testing for edit steps");
        EditDefectPage.clickOKButton();
        LOGGER.info("click ok button");
        extentTest.log(LogStatus.PASS, "click ok button");
        staticWait(1);
        DefectPage.clickMoreDefectDetailsButton("DEF001");
        softAssert.assertEquals(MoreDefectPage.getsteps(),"testing for edit steps","steps not match");
        LOGGER.info("steps edited successfully");
        extentTest.log(LogStatus.PASS, "steps edited successfully");
        softAssert.assertAll();
    }
    @Test(priority=29,groups = { "regression","smoke","test"})
    public void editType() {
        PageBase.implicitWait(5);
        //softAssert.assertTrue(HomePage.isHomePageDisplayed(),"Home Page is not Displayed");
        LOGGER.info("Home Page is Displayed");
        extentTest.log(LogStatus.PASS, "Home page is displayed ");
        staticWait(2);
        softAssert.assertEquals(HomePage.isDefectMenuDisplayed(),"Defect","defect menu not available");
        LOGGER.info("Defect menu is displayed");
        extentTest.log(LogStatus.PASS, "Defect menu is displayed");
        HomePage.clickDefectMenu();
        LOGGER.info("Click Defect menu");
        extentTest.log(LogStatus.PASS, "click defect menu");
        staticWait(2);
        softAssert.assertEquals(HomePage.isDefectSubMenuDisplayed(),"Defect","defect sub  menu not available");
        LOGGER.info("Defect sub menu is displayed");
        extentTest.log(LogStatus.PASS, "Defect sub menu is displayed");
        HomePage.clickDefectSubMenu();
        LOGGER.info("Click Defect sub menu");
        extentTest.log(LogStatus.PASS, "click defect sub menu");
        softAssert.assertTrue(DefectPage.isDefectPageTitleDisplayed(),"Defect Page is not Displayed");
        LOGGER.info("Defect Page is  Displayed");
        extentTest.log(LogStatus.PASS, "Defect Page is  Displayed");
        DefectPage.clickEditButton("DEF001");
        LOGGER.info("click edit button");
        extentTest.log(LogStatus.PASS, "click edit button");
        staticWait(3);
        softAssert.assertTrue(EditDefectPage.isEditDefectFormDisplayed(),"Edit Defect Form is not Displayed");
        LOGGER.info("edit defect form is displayed");
        extentTest.log(LogStatus.PASS, "edit defect form is displayed");
        EditDefectPage.editType("Function");
        EditDefectPage.clickOKButton();
        LOGGER.info("click ok button");
        extentTest.log(LogStatus.PASS, "click ok button");
        staticWait(1);
        DefectPage.clickMoreDefectDetailsButton("DEF001");
        staticWait(2);
        softAssert.assertEquals(MoreDefectPage.getType(),"Function","defect type not match");
        LOGGER.info("defect type edited successfully");
        extentTest.log(LogStatus.PASS, "defect type  edited successfully");
        softAssert.assertAll();
    }
    @Test(priority=30,groups = { "regression","test"})
    public void checkEditDefectCancelButton() {
        PageBase.implicitWait(5);
        //softAssert.assertTrue(HomePage.isHomePageDisplayed(),"Home Page is not Displayed");
        LOGGER.info("Home Page is Displayed");
        extentTest.log(LogStatus.PASS, "Home page is displayed ");
        staticWait(2);
        softAssert.assertEquals(HomePage.isDefectMenuDisplayed(),"Defect","defect menu not available");
        LOGGER.info("Defect menu is displayed");
        extentTest.log(LogStatus.PASS, "Defect menu is displayed");
        HomePage.clickDefectMenu();
        LOGGER.info("Click Defect menu");
        extentTest.log(LogStatus.PASS, "click defect menu");
        staticWait(2);
        softAssert.assertEquals(HomePage.isDefectSubMenuDisplayed(),"Defect","defect sub  menu not available");
        LOGGER.info("Defect sub menu is displayed");
        extentTest.log(LogStatus.PASS, "Defect sub menu is displayed");
        HomePage.clickDefectSubMenu();
        LOGGER.info("Click Defect sub menu");
        extentTest.log(LogStatus.PASS, "click defect sub menu");
        softAssert.assertTrue(DefectPage.isDefectPageTitleDisplayed(),"Defect Page is not Displayed");
        LOGGER.info("Defect Page is  Displayed");
        extentTest.log(LogStatus.PASS, "Defect Page is  Displayed");
        DefectPage.clickEditButton("DEF001");
        LOGGER.info("click edit button");
        extentTest.log(LogStatus.PASS, "click edit button");
        staticWait(3);
        softAssert.assertTrue(EditDefectPage.isEditDefectFormDisplayed(),"Edit Defect Form is not Displayed");
        LOGGER.info("edit defect form is displayed");
        extentTest.log(LogStatus.PASS, "edit defect form is displayed");
        EditDefectPage.editStatus("status");
        staticWait(3);
        EditDefectPage.clickCancelButton();
        LOGGER.info("click ok button");
        extentTest.log(LogStatus.PASS, "click ok button");
        softAssert.assertEquals(DefectPage.verifyEditStatus("DEF001","5"),"Open","not match");
        softAssert.assertAll();
    }
}